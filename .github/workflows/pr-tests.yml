name: Python integration repo PR tests

on:
  pull_request:
    branches: [ develop ]

jobs:
  churn_classification:
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ['3.8', '3.11']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        if: steps.changes.outputs.core == 'true'
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Dependencies
        if: steps.changes.outputs.core == 'true'
        run: pipenv install --dev --python=${{ matrix.python-version }}
      - name: Pytest churn_classification
        run: pytest -m "churn_classification" tests

  complex_application:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.11']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        if: steps.changes.outputs.core == 'true'
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install Dependencies
        if: steps.changes.outputs.core == 'true'
        run: pipenv install --dev --python=${{ matrix.python-version }}

      - name: Pytest complex_application
        run: pytest -m "complex_application" tests

  skipped:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.11']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        if: steps.changes.outputs.core == 'true'
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install Dependencies
        if: steps.changes.outputs.core == 'true'
        run: pipenv install --dev --python=${{ matrix.python-version }}

      - name: Pytest skipped
        run: pytest -m "skipped" tests

  tests:
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.11']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        if: steps.changes.outputs.core == 'true'
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install Dependencies
        if: steps.changes.outputs.core == 'true'
        run: pipenv install --dev --python=${{ matrix.python-version }}

      - name: Pytest test
        run: pytest -m "not churn_classification and not complex_application and not skipped" tests
